{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Elija\\\\E_Store\\\\MyStore\\\\MyStore\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductsComponent = class ProductsComponent {\n  //, private cpDTO: CartProductDTO\n  constructor(productService, fb, cartSerive, datashare, nmc) {\n    this.productService = productService;\n    this.fb = fb;\n    this.cartSerive = cartSerive;\n    this.datashare = datashare;\n    this.nmc = nmc;\n    this.products = [];\n    this.addForm = this.fb.group({\n      'CustomerId': this.id,\n      'ProductId': this.index,\n      'Quantity': ['']\n    });\n  }\n\n  ngOnInit() {\n    this.getAllProducts();\n  }\n\n  getAllProducts() {\n    this.productService.getAllProds().subscribe(response => {\n      this.products = response;\n      console.log(response);\n    });\n  }\n\n  getCustomerId() {\n    let x = 0;\n    this.datashare.currentCustomerData.subscribe(data => {\n      x = data.customerId;\n    });\n    return x;\n  }\n\n  addProduct() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.addForm.value.CustomerId = _this.getCustomerId(); //console.log(\"Form info: \" + this.addForm.value.CustomerId + \",\"  + this.addForm.value.ProductId  + \",\"  + this.addForm.value.Quantity);\n\n      yield _this.cartSerive.addToCart(_this.addForm.value).subscribe(data => {\n        console.log(data, _this.addForm.value);\n      });\n      yield _this.cartSerive.getCustomersCart(_this.addForm.value.CustomerId).subscribe(data => {\n        _this.datashare.setCartData(data);\n      });\n    })();\n  }\n\n  updateCount() {\n    this.nmc.addCount(this.addForm.value.Quantity);\n  }\n\n  updateData() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let p = _this2.products[_this2.index];\n      p.quantity = p.quantity - _this2.addForm.value.Quantity;\n      console.log(p);\n      _this2.products[_this2.index] = p;\n      yield _this2.productService.updateProd(_this2.addForm.value.ProductId, p).subscribe(data => {\n        //this.datashare.setCustomerData(data),\n        console.log(data);\n      });\n    })();\n  }\n\n  setProdID(p) {\n    this.addForm.value.ProductId = p.productId;\n  }\n\n  setIndex(i) {\n    this.index = i;\n  }\n\n};\nProductsComponent = __decorate([Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})], ProductsComponent);\nexport { ProductsComponent };\n/*\r\nproducts: Product[]= [];\r\n  addForm: FormGroup;\r\n  public id: number;\r\n  public index: number;\r\n  public isLoggedinData : boolean = false;\r\n\r\n//, private cpDTO: CartProductDTO\r\n  constructor(private productService: ProductsService, private fb: FormBuilder, private cartSerive: CartService, private datashare: DatashareService, private nmc : NavMenuComponent) {\r\n    this.addForm = this.fb.group({\r\n\r\n      'CustomerId': this.id,\r\n\r\n      'ProductId' : this.index,\r\n\r\n      'Quantity': [''],\r\n\r\n    })\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.getAllProducts();\r\n    this.isLoggedIn();\r\n    this.getCustomerId();\r\n    //this.nmc\r\n  }\r\n\r\n  getAllProducts(){\r\n    this.productService.getAllProds().subscribe(\r\n      response => {\r\n        this.products = response;\r\n      }\r\n    );\r\n  }\r\n\r\n  isLoggedIn(){\r\n    this.datashare.currentLogginData.subscribe(data => {\r\n      this.isLoggedinData = data;\r\n      console.log(data);\r\n\r\n    });\r\n  }\r\n\r\n  getCustomerId(){\r\n    if(this.isLoggedinData == true){\r\n      this.datashare.currentCustomerData.subscribe(data => {\r\n        this.addForm.value.CustomerId = data.customerId,\r\n        this.id = data.customerId,\r\n        console.log(data);\r\n      });\r\n    }\r\n  }\r\n\r\n addProduct(){\r\n    this.cartSerive.addToCart(this.addForm.value).subscribe(data => {console.log(data);\r\n    });\r\n    this.nmc.totalItems += this.addForm.value.Quantity;\r\n\r\n    //await this.cartSerive.getCustomersCart(id).subscribe(data => {\r\n      //this.datashare.setCartData(data);\r\n    //});\r\n    //this.getAllProducts();\r\n\r\n\r\n  }\r\n\r\n  updateData(){\r\n    let p: Product = this.products[this.index];\r\n    p.quantity = p.quantity - this.addForm.value.Quantity;\r\n    //console.log(p)\r\n    this.products[this.index] = p;\r\n    this.productService.updateProd(this.addForm.value.ProductId, p).subscribe(\r\n      data => {\r\n        //this.datashare.setCustomerData(data),\r\n        console.log(data);\r\n      }\r\n    );\r\n  }\r\n\r\n  public setProdID(p:Product){\r\n    this.addForm.value.ProductId = p.productId;\r\n  }\r\n\r\n  public setIndex(i:number){\r\n    this.index = i;\r\n\r\n  }\r\n}\r\n*/","map":{"version":3,"sources":["C:/Users/Elija/E_Store/MyStore/MyStore/ClientApp/src/app/products/products.component.ts"],"names":["__decorate","Component","ProductsComponent","constructor","productService","fb","cartSerive","datashare","nmc","products","addForm","group","id","index","ngOnInit","getAllProducts","getAllProds","subscribe","response","console","log","getCustomerId","x","currentCustomerData","data","customerId","addProduct","value","CustomerId","addToCart","getCustomersCart","setCartData","updateCount","addCount","Quantity","updateData","p","quantity","updateProd","ProductId","setProdID","productId","setIndex","i","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nlet ProductsComponent = class ProductsComponent {\r\n    //, private cpDTO: CartProductDTO\r\n    constructor(productService, fb, cartSerive, datashare, nmc) {\r\n        this.productService = productService;\r\n        this.fb = fb;\r\n        this.cartSerive = cartSerive;\r\n        this.datashare = datashare;\r\n        this.nmc = nmc;\r\n        this.products = [];\r\n        this.addForm = this.fb.group({\r\n            'CustomerId': this.id,\r\n            'ProductId': this.index,\r\n            'Quantity': [''],\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.getAllProducts();\r\n    }\r\n    getAllProducts() {\r\n        this.productService.getAllProds().subscribe(response => {\r\n            this.products = response;\r\n            console.log(response);\r\n        });\r\n    }\r\n    getCustomerId() {\r\n        let x = 0;\r\n        this.datashare.currentCustomerData.subscribe(data => {\r\n            x = data.customerId;\r\n        });\r\n        return x;\r\n    }\r\n    async addProduct() {\r\n        this.addForm.value.CustomerId = this.getCustomerId();\r\n        //console.log(\"Form info: \" + this.addForm.value.CustomerId + \",\"  + this.addForm.value.ProductId  + \",\"  + this.addForm.value.Quantity);\r\n        await this.cartSerive.addToCart(this.addForm.value).subscribe(data => {\r\n            console.log(data, this.addForm.value);\r\n        });\r\n        await this.cartSerive.getCustomersCart(this.addForm.value.CustomerId).subscribe(data => {\r\n            this.datashare.setCartData(data);\r\n        });\r\n    }\r\n    updateCount() {\r\n        this.nmc.addCount(this.addForm.value.Quantity);\r\n    }\r\n    async updateData() {\r\n        let p = this.products[this.index];\r\n        p.quantity = p.quantity - this.addForm.value.Quantity;\r\n        console.log(p);\r\n        this.products[this.index] = p;\r\n        await this.productService.updateProd(this.addForm.value.ProductId, p).subscribe(data => {\r\n            //this.datashare.setCustomerData(data),\r\n            console.log(data);\r\n        });\r\n    }\r\n    setProdID(p) {\r\n        this.addForm.value.ProductId = p.productId;\r\n    }\r\n    setIndex(i) {\r\n        this.index = i;\r\n    }\r\n};\r\nProductsComponent = __decorate([\r\n    Component({\r\n        selector: 'app-products',\r\n        templateUrl: './products.component.html',\r\n        styleUrls: ['./products.component.css']\r\n    })\r\n], ProductsComponent);\r\nexport { ProductsComponent };\r\n/*\r\nproducts: Product[]= [];\r\n  addForm: FormGroup;\r\n  public id: number;\r\n  public index: number;\r\n  public isLoggedinData : boolean = false;\r\n\r\n//, private cpDTO: CartProductDTO\r\n  constructor(private productService: ProductsService, private fb: FormBuilder, private cartSerive: CartService, private datashare: DatashareService, private nmc : NavMenuComponent) {\r\n    this.addForm = this.fb.group({\r\n\r\n      'CustomerId': this.id,\r\n\r\n      'ProductId' : this.index,\r\n\r\n      'Quantity': [''],\r\n\r\n    })\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.getAllProducts();\r\n    this.isLoggedIn();\r\n    this.getCustomerId();\r\n    //this.nmc\r\n  }\r\n\r\n  getAllProducts(){\r\n    this.productService.getAllProds().subscribe(\r\n      response => {\r\n        this.products = response;\r\n      }\r\n    );\r\n  }\r\n\r\n  isLoggedIn(){\r\n    this.datashare.currentLogginData.subscribe(data => {\r\n      this.isLoggedinData = data;\r\n      console.log(data);\r\n\r\n    });\r\n  }\r\n\r\n  getCustomerId(){\r\n    if(this.isLoggedinData == true){\r\n      this.datashare.currentCustomerData.subscribe(data => {\r\n        this.addForm.value.CustomerId = data.customerId,\r\n        this.id = data.customerId,\r\n        console.log(data);\r\n      });\r\n    }\r\n  }\r\n\r\n addProduct(){\r\n    this.cartSerive.addToCart(this.addForm.value).subscribe(data => {console.log(data);\r\n    });\r\n    this.nmc.totalItems += this.addForm.value.Quantity;\r\n\r\n    //await this.cartSerive.getCustomersCart(id).subscribe(data => {\r\n      //this.datashare.setCartData(data);\r\n    //});\r\n    //this.getAllProducts();\r\n\r\n\r\n  }\r\n\r\n  updateData(){\r\n    let p: Product = this.products[this.index];\r\n    p.quantity = p.quantity - this.addForm.value.Quantity;\r\n    //console.log(p)\r\n    this.products[this.index] = p;\r\n    this.productService.updateProd(this.addForm.value.ProductId, p).subscribe(\r\n      data => {\r\n        //this.datashare.setCustomerData(data),\r\n        console.log(data);\r\n      }\r\n    );\r\n  }\r\n\r\n  public setProdID(p:Product){\r\n    this.addForm.value.ProductId = p.productId;\r\n  }\r\n\r\n  public setIndex(i:number){\r\n    this.index = i;\r\n\r\n  }\r\n}\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}